{"ast":null,"code":"export { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __rest } from 'tslib';\nimport { useQuery, useMutation, useSubscription } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nfunction Query(props) {\n  var children = props.children,\n      query = props.query,\n      options = __rest(props, [\"children\", \"query\"]);\n\n  var result = useQuery(query, options);\n  return children && result ? children(result) : null;\n}\n\n(function (Query) {\n  Query.propTypes = {\n    client: PropTypes.object,\n    children: PropTypes.func.isRequired,\n    fetchPolicy: PropTypes.string,\n    notifyOnNetworkStatusChange: PropTypes.bool,\n    onCompleted: PropTypes.func,\n    onError: PropTypes.func,\n    pollInterval: PropTypes.number,\n    query: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    ssr: PropTypes.bool,\n    partialRefetch: PropTypes.bool,\n    returnPartialData: PropTypes.bool\n  };\n})(Query || (Query = {}));\n\nfunction Mutation(props) {\n  var _a = useMutation(props.mutation, props),\n      runMutation = _a[0],\n      result = _a[1];\n\n  return props.children ? props.children(runMutation, result) : null;\n}\n\n(function (Mutation) {\n  Mutation.propTypes = {\n    mutation: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    optimisticResponse: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    refetchQueries: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])), PropTypes.func]),\n    awaitRefetchQueries: PropTypes.bool,\n    update: PropTypes.func,\n    children: PropTypes.func.isRequired,\n    onCompleted: PropTypes.func,\n    onError: PropTypes.func,\n    fetchPolicy: PropTypes.string\n  };\n})(Mutation || (Mutation = {}));\n\nfunction Subscription(props) {\n  var result = useSubscription(props.subscription, props);\n  return props.children && result ? props.children(result) : null;\n}\n\n(function (Subscription) {\n  Subscription.propTypes = {\n    subscription: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    children: PropTypes.func,\n    onSubscriptionData: PropTypes.func,\n    onSubscriptionComplete: PropTypes.func,\n    shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n  };\n})(Subscription || (Subscription = {}));\n\nexport { Mutation, Query, Subscription };","map":{"version":3,"mappings":"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","names":["Query","props","query","options","result","useQuery","children","client","PropTypes","object","func","isRequired","fetchPolicy","string","notifyOnNetworkStatusChange","bool","onCompleted","onError","pollInterval","number","variables","ssr","partialRefetch","returnPartialData","Mutation","runMutation","mutation","optimisticResponse","oneOfType","refetchQueries","arrayOf","awaitRefetchQueries","update","Subscription","useSubscription","subscription","onSubscriptionData","onSubscriptionComplete","shouldResubscribe"],"sources":["../src/Query.tsx","../src/Mutation.tsx","../src/Subscription.tsx"],"sourcesContent":["import { OperationVariables } from '@apollo/react-common';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nimport { QueryComponentOptions } from './types';\n\nexport function Query<TData = any, TVariables = OperationVariables>(\n  props: QueryComponentOptions<TData, TVariables>\n) {\n  const { children, query, ...options } = props;\n  const result = useQuery(query, options);\n  return children && result ? children(result) : null;\n}\n\nexport namespace Query {\n  export const propTypes = {\n    client: PropTypes.object,\n    children: PropTypes.func.isRequired,\n    fetchPolicy: PropTypes.string,\n    notifyOnNetworkStatusChange: PropTypes.bool,\n    onCompleted: PropTypes.func,\n    onError: PropTypes.func,\n    pollInterval: PropTypes.number,\n    query: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    ssr: PropTypes.bool,\n    partialRefetch: PropTypes.bool,\n    returnPartialData: PropTypes.bool\n  };\n}\n","import { OperationVariables } from '@apollo/react-common';\nimport { useMutation } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nimport { MutationComponentOptions } from './types';\n\nexport function Mutation<TData = any, TVariables = OperationVariables>(\n  props: MutationComponentOptions<TData, TVariables>\n) {\n  const [runMutation, result] = useMutation(props.mutation, props);\n  return props.children ? props.children(runMutation, result) : null;\n}\n\nexport namespace Mutation {\n  export const propTypes = {\n    mutation: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    optimisticResponse: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    refetchQueries: PropTypes.oneOfType([\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n      ),\n      PropTypes.func\n    ]),\n    awaitRefetchQueries: PropTypes.bool,\n    update: PropTypes.func,\n    children: PropTypes.func.isRequired,\n    onCompleted: PropTypes.func,\n    onError: PropTypes.func,\n    fetchPolicy: PropTypes.string\n  };\n}\n","import { OperationVariables } from '@apollo/react-common';\nimport { useSubscription } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nimport { SubscriptionComponentOptions } from './types';\n\nexport function Subscription<TData = any, TVariables = OperationVariables>(\n  props: SubscriptionComponentOptions<TData, TVariables>\n) {\n  const result = useSubscription(props.subscription, props);\n  return props.children && result ? props.children(result) : null;\n}\n\nexport namespace Subscription {\n  export const propTypes = {\n    subscription: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    children: PropTypes.func,\n    onSubscriptionData: PropTypes.func,\n    onSubscriptionComplete: PropTypes.func,\n    shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}