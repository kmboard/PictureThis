{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kirk6\\\\Desktop\\\\GTBootcamp\\\\p3p\\\\portfolio-app\\\\src\\\\Register.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './styles/Homepage.css';\nimport Header from './Header';\nimport Form from './Forms/LoginForm';\nimport RegisterForm from './Forms/RegisterForm';\nimport { Segment, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport client from './api/ApolloClient';\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst POST_REGISTER = gql`\n  mutation RegisterUser ($email: String!, $password: String!) {\n    registerUser(email: $email, password: $password) {\n\t  email\n    }\n  }\n`;\n\nclass Register extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {};\n\n    this.handleConfirm = () => {\n      if (this.props.message) {\n        this.props.dispatch({\n          type: \"CLEAR_SIGN_IN\",\n          payload: \"\"\n        });\n      }\n    };\n\n    this.handleRegConfirm = () => {\n      if (this.props.regMessage) {\n        this.props.dispatch({\n          type: \"CLEAR_SIGN_UP\",\n          payload: \"\"\n        });\n      }\n    };\n\n    this.renderSignUpMessages = () => {\n      if (this.props.message === \"email\") {\n        if (document.querySelector(\".login_input_text\")) {\n          document.querySelector(\".login_input_text\").focus();\n        }\n\n        return \"An account with that sign-in information does not exist\";\n      } else if (this.props.message === \"password\") {\n        if (document.getElementById(\"login_input_password\")) {\n          document.getElementById(\"login_input_password\").focus();\n        }\n\n        return \"You have entered wrong password\";\n      }\n    };\n\n    this.componentDidMount = () => {\n      console.log('X');\n    };\n\n    this.componentWillUnmount = () => {};\n  }\n\n  async onSubmit() {\n    if (!this.props.RegForm.syncErrors && this.props.RegForm && this.props.RegForm.values && this.props.RegForm.values.email && this.props.RegForm.values.password) {\n      this.props.dispatch({\n        type: \"CLEAR_SIGN_IN\",\n        payload: \"\"\n      });\n      const {\n        email,\n        password\n      } = this.props.RegForm.values;\n      const request = await client.mutate({\n        variables: {\n          email,\n          password\n        },\n        mutation: POST_REGISTER\n      });\n      console.log(request);\n\n      if (request.data && request.data.registerUser) {\n        this.props.history.push(\"/\");\n      }\n    } else {\n      console.log(\"validation\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        scrollbarColor: 'transparent transparent',\n        scrollbarWidth: 'none',\n        userSelect: 'text'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        className: \"sign-up-container\",\n        style: {\n          margin: '0 auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n          handleConfirm: this.handleRegConfirm // onSubmit={this.onSubmit}\n          ,\n          disableInput: this.state.disableInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.renderSignUpMessages()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login_button_container\",\n            children: !this.state.requested ? /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              onClick: e => {\n                this.onSubmit();\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 36\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              children: \"Loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reg_button_container\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"headerText\",\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                primary: true,\n                children: \"Go to Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    RegForm: state.form.RegForm,\n    isSignedIn: state.auth.isSignedIn,\n    message: state.auth.message\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"names":["React","connect","Header","Form","RegisterForm","Segment","Button","Link","client","gql","POST_REGISTER","Register","Component","state","handleConfirm","props","message","dispatch","type","payload","handleRegConfirm","regMessage","renderSignUpMessages","document","querySelector","focus","getElementById","componentDidMount","console","log","componentWillUnmount","onSubmit","RegForm","syncErrors","values","email","password","request","mutate","variables","mutation","data","registerUser","history","push","render","width","display","scrollbarColor","scrollbarWidth","userSelect","margin","disableInput","justifyContent","requested","e","mapDispatchToProps","mapStateToProps","form","isSignedIn","auth"],"sources":["C:/Users/kirk6/Desktop/GTBootcamp/p3p/portfolio-app/src/Register.js"],"sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './styles/Homepage.css';\r\nimport Header from './Header';\r\nimport Form from './Forms/LoginForm';\r\nimport RegisterForm from './Forms/RegisterForm';\r\nimport { Segment, Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport client from './api/ApolloClient';\r\nimport gql from 'graphql-tag';\r\n\r\nconst POST_REGISTER = gql`\r\n  mutation RegisterUser ($email: String!, $password: String!) {\r\n    registerUser(email: $email, password: $password) {\r\n\t  email\r\n    }\r\n  }\r\n`;\r\n\r\nclass Register extends React.Component{\r\n\r\n\tstate={\r\n        \r\n    }\r\n\r\n\thandleConfirm = () => {\r\n\t\tif (this.props.message) {\r\n\t\t\tthis.props.dispatch({ type: \"CLEAR_SIGN_IN\", payload: \"\" });\r\n\t\t}\r\n\t}\r\n\r\n\thandleRegConfirm = () => {\r\n\t\tif (this.props.regMessage) {\r\n\t\t\tthis.props.dispatch({ type: \"CLEAR_SIGN_UP\", payload: \"\" });\r\n\t\t}\r\n\t}\r\n\r\n\tasync onSubmit(){\r\n\t\tif (!this.props.RegForm.syncErrors && (this.props.RegForm && this.props.RegForm.values && this.props.RegForm.values.email && this.props.RegForm.values.password)) {\r\n\t\t\tthis.props.dispatch({ type: \"CLEAR_SIGN_IN\", payload: \"\" });\r\n\t\t\tconst {email, password} = this.props.RegForm.values;\r\n\t\t\tconst request = await client.mutate({\r\n\t\t\t\tvariables: { email, password },\r\n\t\t\t\tmutation: POST_REGISTER,\r\n\t\t\t})\r\n\r\n\t\t\tconsole.log(request);\r\n\t\t\tif(request.data&&request.data.registerUser){\r\n\t\t\t\tthis.props.history.push(\"/\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"validation\")\r\n\t\t}\r\n\t}\r\n\r\n\trenderSignUpMessages = () => {\r\n\t\tif (this.props.message === \"email\") {\r\n\t\t\tif (document.querySelector(\".login_input_text\")) {\r\n\t\t\t\tdocument.querySelector(\".login_input_text\").focus();\r\n\t\t\t}\r\n\t\t\treturn \"An account with that sign-in information does not exist\";\r\n\t\t}\r\n\t\telse if (this.props.message === \"password\") {\r\n\t\t\tif (document.getElementById(\"login_input_password\")) {\r\n\t\t\t\tdocument.getElementById(\"login_input_password\").focus();\r\n\t\t\t}\r\n\t\t\treturn \"You have entered wrong password\";\r\n\t\t}\r\n\t}\r\n\r\n\t// renderSignUpMessages = () => {\r\n\t// \tif (this.props.regStatus.message === \"invalid\") {\r\n\t// \t\treturn \"Unauthorized access\";\r\n\t// \t}\r\n\t// \telse if (this.props.regStatus.message === \"email\") {\r\n\t// \t\treturn \"An account with this email already exists\";\r\n\t// \t}\r\n\t// \telse if (this.props.regStatus.message === \"validation\") {\r\n\t// \t\treturn \"Please enter a valid phone number\";\r\n\t// \t}\r\n\t// \telse if (this.props.regStatus.message === \"company\") {\r\n\t// \t\treturn \"This company name is already registered\";\r\n\t// \t}\r\n\t// \telse if (this.props.regStatus.message === \"done\") {\r\n\t// \t\treturn \"We have sent a verification link to your email address. If you do not receive it within a few minutes, please check your Junk, Bulk or Spam folders. Mark the message as not spam to avoid problems receiving our correspondence in the future.\";\r\n\t// \t}\r\n\t// }\r\n\r\n\tcomponentDidMount=()=>{\r\n        console.log('X')\r\n\t}\r\n\r\n\tcomponentWillUnmount=()=>{\r\n\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div style={{width:'100%',display: 'flex',scrollbarColor:'transparent transparent',scrollbarWidth:'none',userSelect:'text'}}>\r\n\t\t\t\t<Header/>\r\n\t\t\t\t<Segment className=\"sign-up-container\" style={{margin: '0 auto'}}>\r\n\t\t\t\t\t<h1>Register</h1>\r\n\t\t\t\t\t<RegisterForm\r\n\t\t\t\t\t\thandleConfirm={this.handleRegConfirm}\r\n\t\t\t\t\t\t// onSubmit={this.onSubmit}\r\n\t\t\t\t\t\tdisableInput={this.state.disableInput}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p>{this.renderSignUpMessages()}</p>\r\n\t\t\t\t\t<div style={{display: 'flex', justifyContent: 'center'}}>\r\n\t\t\t\t\t\t<div className='login_button_container' >\r\n\t\t\t\t\t\t\t{(!this.state.requested) ? (<Button primary onClick={(e) => { this.onSubmit() }}>Sign Up</Button>)\r\n\t\t\t\t\t\t\t: (<Button primary>Loading</Button>)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='reg_button_container' >\r\n\t\t\t\t\t\t\t<Link className='headerText' to=\"/\">\r\n\t\t\t\t\t\t\t\t<Button primary>Go to Login</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Segment>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tdispatch\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tRegForm: state.form.RegForm,\r\n\t\tisSignedIn: state.auth.isSignedIn,\r\n\t\tmessage: state.auth.message,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}