{"ast":null,"code":"import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:5000/graph'\n});\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  // get the authentication token from local storage if it exists\n  const token = JSON.parse(localStorage.getItem('persist:auth')) && JSON.parse(localStorage.getItem('persist:auth')).token ? JSON.parse(localStorage.getItem('persist:auth')).token.replace(/\\\"/g, '') : null; // return the headers to the context so httpLink can read them\n\n  console.log(token);\n  return {\n    headers: { ...headers,\n      'access-token': token ? `${token}` : \"\"\n    }\n  };\n});\nexport default new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n}); // const httpLink = new HttpLink({ uri: 'http://localhost:5000/graph' });\n// const authMiddleware = new ApolloLink((operation, forward) => {\n//   // add the authorization to the headers\n//   operation.setContext(({ headers = {} }) => ({\n//     headers: {\n//       ...headers,\n//       authorization: (JSON.parse(localStorage.getItem('persist:auth'))&&JSON.parse(localStorage.getItem('persist:auth')).token)?JSON.parse(localStorage.getItem('persist:auth')).token.replace(/\\\"/g,''):null,\n//     }\n//   }));\n//   return forward(operation);\n// })\n// console.log(JSON.parse(localStorage.getItem('persist:auth')).token)\n// export default new ApolloClient({\n//   cache: new InMemoryCache(),\n//   link: concat(authMiddleware, httpLink),\n// });\n// export default new ApolloClient({\n//   uri: \"http://localhost:5000/graph\",\n// });","map":{"version":3,"names":["ApolloClient","createHttpLink","InMemoryCache","setContext","httpLink","uri","authLink","_","headers","token","JSON","parse","localStorage","getItem","replace","console","log","link","concat","cache"],"sources":["C:/Users/kirk6/Desktop/GTBootcamp/p3p/portfolio-app/src/api/ApolloClient.js"],"sourcesContent":["import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'http://localhost:5000/graph',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = (JSON.parse(localStorage.getItem('persist:auth'))&&JSON.parse(localStorage.getItem('persist:auth')).token)?JSON.parse(localStorage.getItem('persist:auth')).token.replace(/\\\"/g,''):null;\r\n  // return the headers to the context so httpLink can read them\r\n  console.log(token);\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      'access-token': token ? `${token}` : \"\",\r\n    }\r\n  }\r\n});\r\n\r\nexport default new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\n// const httpLink = new HttpLink({ uri: 'http://localhost:5000/graph' });\r\n\r\n// const authMiddleware = new ApolloLink((operation, forward) => {\r\n//   // add the authorization to the headers\r\n//   operation.setContext(({ headers = {} }) => ({\r\n//     headers: {\r\n//       ...headers,\r\n//       authorization: (JSON.parse(localStorage.getItem('persist:auth'))&&JSON.parse(localStorage.getItem('persist:auth')).token)?JSON.parse(localStorage.getItem('persist:auth')).token.replace(/\\\"/g,''):null,\r\n//     }\r\n//   }));\r\n\r\n//   return forward(operation);\r\n// })\r\n\r\n// console.log(JSON.parse(localStorage.getItem('persist:auth')).token)\r\n\r\n\r\n// export default new ApolloClient({\r\n//   cache: new InMemoryCache(),\r\n//   link: concat(authMiddleware, httpLink),\r\n// });\r\n\r\n\r\n\r\n// export default new ApolloClient({\r\n//   uri: \"http://localhost:5000/graph\",\r\n// });"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,MAAMC,QAAQ,GAAGH,cAAc,CAAC;EAC9BI,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,QAAQ,GAAGH,UAAU,CAAC,CAACI,CAAD,WAAoB;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC9C;EACA,MAAMC,KAAK,GAAIC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,KAAkDH,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDJ,KAApG,GAA2GC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDJ,KAAjD,CAAuDK,OAAvD,CAA+D,KAA/D,EAAqE,EAArE,CAA3G,GAAoL,IAAlM,CAF8C,CAG9C;;EACAC,OAAO,CAACC,GAAR,CAAYP,KAAZ;EACA,OAAO;IACLD,OAAO,EAAE,EACP,GAAGA,OADI;MAEP,gBAAgBC,KAAK,GAAI,GAAEA,KAAM,EAAZ,GAAgB;IAF9B;EADJ,CAAP;AAMD,CAX0B,CAA3B;AAaA,eAAe,IAAIT,YAAJ,CAAiB;EAC9BiB,IAAI,EAAEX,QAAQ,CAACY,MAAT,CAAgBd,QAAhB,CADwB;EAE9Be,KAAK,EAAE,IAAIjB,aAAJ;AAFuB,CAAjB,CAAf,C,CAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAIA;AACA;AACA"},"metadata":{},"sourceType":"module"}